import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class UserInfoDAO {
	public int insertUserInfo(UserInfoVO mvo) throws Exception {
		String dml = "insert into test.EMPINFO (" +
				"emp_no, id, pwd, name, rnumber, dept, position, registedate" +
				") valuse (?,?,?,?,?,?,?,?)";
		Connection con = null;
		PreparedStatement pstmt = null;
		int intVal = 0;
		
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(dml);
			pstmt.setString(1, mvo.getEmp_no());
			pstmt.setString(2, mvo.getId());
			pstmt.setString(3, mvo.getPwd());
			pstmt.setString(4, mvo.getName());
			pstmt.setString(5, mvo.getRnumber());
			pstmt.setString(6, mvo.getDept());
			pstmt.setString(7, mvo.getPosition());
			pstmt.setString(8, mvo.getRegistdate());
			
			intVal = pstmt.executeUpdate();
			if(intVal < 1) {
				System.out.println("데이터 입력 실패");
			} else {
				System.out.println("데이터 입력 성공");
			}
		} catch(SQLException e) {
			String msg = "sql exception발생";
			throw new SQLException(msg + "\n" + e);
		} finally {
			try {
				DBUtil.closeConnection(con, pstmt);
			} catch(Exception e) {}
		}
		return intVal;
	}
	
	public int updateUserInfo(UserInfoVO mvo) throws Exception {
		String dml = "update test.EMPINFO set " +
				"id = ?, pwd=?, name=?, rnumber=?, dept=?, position=?, registedate=?" +
				" where emp_no = ?";
		Connection con = null;
		PreparedStatement pstmt = null;
		int intVal = 0;
		
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(dml);
			pstmt.setString(1, mvo.getId());
			pstmt.setString(2, mvo.getPwd());
			pstmt.setString(3, mvo.getName());
			pstmt.setString(4, mvo.getRnumber());
			pstmt.setString(5, mvo.getDept());
			pstmt.setString(6, mvo.getPosition());
			pstmt.setString(7, mvo.getRegistdate());
			pstmt.setString(8, mvo.getEmp_no());
			
			intVal = pstmt.executeUpdate();
			if(intVal < 1) {
				System.out.println("데이터 수정 실패");
			} else {
				System.out.println("데이터 수정 성공");
			}
		} catch(SQLException e) {
			String msg = "sql exception발생";
			throw new SQLException(msg + "\n" + e);
		} finally {
			try {
				DBUtil.closeConnection(con, pstmt);
			} catch(Exception e) {}
		}
		return intVal;
	}
	
	public int deleteUserInfo(UserInfoVO mvo) throws Exception {
		String dml = "delete from test.empinfo" +
				" where emp_no = ?";
		Connection con = null;
		PreparedStatement pstmt = null;
		int intVal = 0;
		
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(dml);
			pstmt.setString(1, mvo.getEmp_no());
			
			intVal = pstmt.executeUpdate();
			if(intVal < 1) {
				System.out.println("데이터 삭제 실패");
			} else {
				System.out.println("데이터 삭제 성공");
			}
		} catch(SQLException e) {
			String msg = "sql exception발생";
			throw new SQLException(msg + "\n" + e);
		} finally {
			try {
				DBUtil.closeConnection(con, pstmt);
			} catch(Exception e) {}
		}
		return intVal;
	}
	
	public UserInfoVO selectUserInfo(UserInfoVO mvo) throws Exception {
		String dml = "select * from test.empinfo where emp_no = ?";
		Connection con = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		UserInfoVO retval = null;
		
		try {
			con = DBUtil.getConnection();
			pstmt = con.prepareStatement(dml);
			pstmt.setString(1, mvo.getEmp_no());
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				retval = new UserInfoVO(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8));
			}
		} catch(SQLException e) {
			String msg = "데이터 조회 실패";
			System.out.println(msg + "\n" + e);
			throw new SQLException(msg + "\n" + e);
		} finally {
			DBUtil.closeConnection(con, pstmt, rs);
		}
		return retval;
	}
}
